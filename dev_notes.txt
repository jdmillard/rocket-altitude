f = ma
-g -D = m * h_ddot
D = 0.5 rho h_dot^2 CD
rho = ...
CD = m*theta + b

The end goal is to design a controller that reliably arrives at a desired altitude
in a Monte Carlo simulation which high variance on key parameters. We'd also like
to design a high-fidelity observer which simulates realistic noise on the relevant
sensors.

Due to the difficult differential equations, an iterative approach is taken to
create a reference trajectory with pessimistic drag. The idea is at any point,
remain faster - drive the error to zero without overshooting (negative error).

A perhaps more sophisticated approach would be to try and estimate the drag
coefficient on-line and continually update the reference trajectory.


NOTES 3/25/2017:
JM: the reference trajectory is now generated from sea level, this gives us the
desired hd for any h. Now I'd like to create a plot of the error between the
current trajectory and the reference trajectory over time. This will require
some interpolation from the reference trajectory since it's not a 1-1 mapping

NOTES 3/29/2017:
Error is plotted. I'd like to eventually update the state propagation and reference
trajectory generation to use a better numerical integration technique, but this
is considered low priority. We ought to get a simple closed-loop example.

NOTES 3/30/2017:
We need to create a dedicated simulation model for the drag flap deployment

 - altitude gain during burn
 - velocity after burn
 - aircraft mass after burn
 - drag coefficient
 - drag coefficient as function of drag fin deployment (full relationship and approximation)
 - reference area for drag (decide a convention and stick to it)
 - max deployment angle, for saturation
 - theta performance, irl, we can't expect instantaneous angle
 - barometer noise characteristics
 - a good wind gust model for disturbances
 - video of drag flaps deploying
